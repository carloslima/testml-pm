---
ANY: '[\s\S]'     # Any unicode character
SPACE: '[\ \t]'   # A space or tab character
SPACES: '\ \t'    #   For use in character classes
BREAK: '\n'       # A newline character
EOL: '\r?\n'      # A Unix or DOS line ending
NON_BREAK: '.'    # Any character except newline
LOWER: '[a-z]'    # Lower case ASCII alphabetic character
UPPER: '[A-Z]'    # Upper case ASCII alphabetic character
ALPHANUM: '[A-Za-z0-9]'    # ASCII alphanumeric character
WORD: '\w'        # ie '[A-Za-z0-9_]' - A "word" character
DIGIT: '[0-9]'    # A numeric digit
DOT: '\.'         # A period character
HASH: '#'         # An octothorpe (or hash) character
BACK: '\'         # A backslash character
SINGLE: "'"       # A single quote character
DOUBLE: '"'       # A double quote character
ESCAPE: '[0nt]'   # One of the escapable character IDs

document:
- meta_section
- test_section
- data_section

meta_section:
- /(?:$comment|$blank_line)*/
- meta_testml_statement
- /:
  - meta_statement
  - comment
  - blank_line
  ^: '*'

comment: /$HASH$line/
line: /$NON_BREAK*$EOL/
blank_line: /$SPACE*$EOL/

meta_testml_statement: /%TestML:$SPACE+($testml_version)(?:$SPACE+$comment|$EOL)/

testml_version: /($DIGIT$DOT$DIGIT+)/

meta_statement: /%($meta_keyword):$SPACE+($meta_value)(?:$SPACE+$comment|$EOL)/

meta_keyword: /(?:$core_meta_keyword|$user_meta_keyword)/
core_meta_keyword: /(?:Title|Data|Plan|TestMLBlockMarker|TestMLPointMarker)/
user_meta_keyword: /$LOWER$WORD*/

meta_value: /(?:$single_quoted_string|$double_quoted_string|$unquoted_string)/

single_quoted_string: /(?:$SINGLE([^$BREAK$BACK$SINGLE]|$BACK$SINGLE|$BACK$BACK)*?$SINGLE)/

double_quoted_string: /(?:$DOUBLE([^$BREAK$BACK$DOUBLE]|$BACK$DOUBLE|$BACK$BACK|$BACK$ESCAPE)*$DOUBLE)/

unquoted_string: /[^$SPACES$BREAK$HASH](?:[^$BREAK$HASH]*[^$SPACES$BREAK$HASH])?/

test_section:
- /:
  - test_statement
  - ws
  ^: '*'
# - /(?:$comment|$EOL)/

test_statement:
- /:
  - test_assertion
  - data_expression
- =: /;/

test_assertion:
- data_expression
- assertion_expression

data_expression:
- data_sub_expression
- =:
  - call_indicator
  - data_sub_expression
  ^: '*'

call_indicator: /(?:$DOT$ws*|$ws*$DOT)/

data_sub_expression:
  /:
  - point_name
  - transform_call

point_name:
  /:
  - user_point_name
  - core_point_name

user_point_name: /($LOWER$WORD*)/

core_point_name: /($UPPER$WORD*)/

ws: /(?:$SPACE|$EOL|$comment)/

transform_call:
- transform_name
- /\($ws*/
- argument_list
- /$ws*\)/

transform_name:
  /:
  - user_transform_name
  - core_transform_name

user_transform_name: /($LOWER$WORD*)/

core_transform_name: /($UPPER$WORD*)/

argument_list:
  =:
  - argument
  - =:
    - /$ws*,$ws*/
    - argument
    ^: '*'
  ^: '?'

argument:
  /:
  - data-expression
  - quoted_string

quoted_string:
  /:
  - single-quoted-string
  - double-quoted-string

assertion_expression:
  /:
  - inline_assertion
  - function_assertion

inline_assertion:
- /$ws+/
- assertion_operator
- /$ws+/
- data_expression

assertion_operator: /==/

data_section: /(===(?:$SPACE|$EOL)$ANY+)/
