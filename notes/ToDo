+ Clean up assert_* functions
+ Meta data goes in global variable stash.
+ Title, Plan and Data can become variables
+ Split standard
+ Move TestML setup into M:I:T
+ Remove Data from AST
+ Move Object into AST
+ Add functions to document
+ Make current parse create a top level function
+ Move functions and vars into namespace
+ Make functions into objects of type -> Func.
+ True, False and None are constant variables
+ Fix M:I:T to use new module set.
+ Parse data in a separate parse.
+ Localize data to a function
+ Rename TestML::Parser::Grammar to TestML::Grammar

- Make TestML::Object::type a method that returns type based on class.
- Delete t/runner.t
- Make namespace a real object with get/set methods.
- Rename TestML::AST -> TestML::Internals
- Rename TestML::Transform::* -> TestML::Library
- Add fetch / store in Function for variable access.
- Add transform for data parse
- Support function definitions
- True/False/None can be singleton objects

- Allow quotes for line points
- Support Native objects

- Redo grammar to match current terminology. like get rid of meta section, for
  example.

== Tests
- List assertions
- Standard string transforms
- Standard list transforms
- Functions

- from glossary
- from test::base
- from yaml::xs
- from perl6 tests
